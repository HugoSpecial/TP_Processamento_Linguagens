
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS COMMA DISCARD EQUAL EXPORT FROM GREATER GREATER_EQUAL IDENTIFIER IMPORT LESS LESS_EQUAL LIMIT NOTEQUAL NUMBER PRINT RENAME SELECT SEMICOLON STAR STRING TABLE WHERE\ncommand : IMPORT TABLE IDENTIFIER FROM STRING SEMICOLON\n\ncommand : EXPORT TABLE IDENTIFIER AS STRING SEMICOLON\n\ncommand : DISCARD TABLE IDENTIFIER SEMICOLON\n\ncommand : RENAME TABLE IDENTIFIER IDENTIFIER SEMICOLON\n\ncommand : PRINT TABLE IDENTIFIER SEMICOLON\n\ncommand : SELECT star_columns FROM IDENTIFIER WHERE condition_list SEMICOLON\n        | SELECT column_list FROM IDENTIFIER WHERE condition_list SEMICOLON\n        | SELECT star_columns FROM IDENTIFIER SEMICOLON\n        | SELECT column_list FROM IDENTIFIER SEMICOLON\n\ncommand : SELECT star_columns FROM IDENTIFIER WHERE condition_list LIMIT NUMBER SEMICOLON\n        | SELECT column_list FROM IDENTIFIER WHERE condition_list LIMIT NUMBER SEMICOLON\n\nstar_columns : STAR\n\ncolumn_list : IDENTIFIER\n            | column_list COMMA IDENTIFIER\n\ncondition_list : condition\n               | condition_list AND condition\n\ncondition : IDENTIFIER comparison_operator value\n\ncomparison_operator : EQUAL\n                    | NOTEQUAL\n                    | LESS\n                    | GREATER\n                    | LESS_EQUAL\n                    | GREATER_EQUAL\n\nvalue : STRING\n      | NUMBER\n'
    
_lr_action_items = {'IMPORT':([0,],[2,]),'EXPORT':([0,],[3,]),'DISCARD':([0,],[4,]),'RENAME':([0,],[5,]),'PRINT':([0,],[6,]),'SELECT':([0,],[7,]),'$end':([1,27,29,35,37,39,40,41,53,56,64,65,],[0,-3,-5,-4,-8,-9,-1,-2,-6,-7,-10,-11,]),'TABLE':([2,3,4,5,6,],[8,9,10,11,12,]),'STAR':([7,],[16,]),'IDENTIFIER':([7,8,9,10,11,12,20,22,23,24,36,38,55,],[14,17,18,19,20,21,28,30,31,32,42,42,42,]),'FROM':([13,14,15,16,17,32,],[22,-13,23,-12,25,-14,]),'COMMA':([14,15,32,],[-13,24,-14,]),'AS':([18,],[26,]),'SEMICOLON':([19,21,28,30,31,33,34,43,44,45,58,59,60,61,62,63,],[27,29,35,37,39,40,41,53,-15,56,-17,-24,-25,64,-16,65,]),'STRING':([25,26,46,47,48,49,50,51,52,],[33,34,59,-18,-19,-20,-21,-22,-23,]),'WHERE':([30,31,],[36,38,]),'EQUAL':([42,],[47,]),'NOTEQUAL':([42,],[48,]),'LESS':([42,],[49,]),'GREATER':([42,],[50,]),'LESS_EQUAL':([42,],[51,]),'GREATER_EQUAL':([42,],[52,]),'LIMIT':([43,44,45,58,59,60,62,],[54,-15,57,-17,-24,-25,-16,]),'AND':([43,44,45,58,59,60,62,],[55,-15,55,-17,-24,-25,-16,]),'NUMBER':([46,47,48,49,50,51,52,54,57,],[60,-18,-19,-20,-21,-22,-23,61,63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'command':([0,],[1,]),'star_columns':([7,],[13,]),'column_list':([7,],[15,]),'condition_list':([36,38,],[43,45,]),'condition':([36,38,55,],[44,44,62,]),'comparison_operator':([42,],[46,]),'value':([46,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> command","S'",1,None,None,None),
  ('command -> IMPORT TABLE IDENTIFIER FROM STRING SEMICOLON','command',6,'p_import_command','parser.py',8),
  ('command -> EXPORT TABLE IDENTIFIER AS STRING SEMICOLON','command',6,'p_export_command','parser.py',15),
  ('command -> DISCARD TABLE IDENTIFIER SEMICOLON','command',4,'p_discard_command','parser.py',22),
  ('command -> RENAME TABLE IDENTIFIER IDENTIFIER SEMICOLON','command',5,'p_rename_command','parser.py',29),
  ('command -> PRINT TABLE IDENTIFIER SEMICOLON','command',4,'p_print_command','parser.py',36),
  ('command -> SELECT star_columns FROM IDENTIFIER WHERE condition_list SEMICOLON','command',7,'p_select_command','parser.py',43),
  ('command -> SELECT column_list FROM IDENTIFIER WHERE condition_list SEMICOLON','command',7,'p_select_command','parser.py',44),
  ('command -> SELECT star_columns FROM IDENTIFIER SEMICOLON','command',5,'p_select_command','parser.py',45),
  ('command -> SELECT column_list FROM IDENTIFIER SEMICOLON','command',5,'p_select_command','parser.py',46),
  ('command -> SELECT star_columns FROM IDENTIFIER WHERE condition_list LIMIT NUMBER SEMICOLON','command',9,'p_select_command_limit','parser.py',70),
  ('command -> SELECT column_list FROM IDENTIFIER WHERE condition_list LIMIT NUMBER SEMICOLON','command',9,'p_select_command_limit','parser.py',71),
  ('star_columns -> STAR','star_columns',1,'p_star_columns','parser.py',88),
  ('column_list -> IDENTIFIER','column_list',1,'p_column_list','parser.py',94),
  ('column_list -> column_list COMMA IDENTIFIER','column_list',3,'p_column_list','parser.py',95),
  ('condition_list -> condition','condition_list',1,'p_condition_list','parser.py',105),
  ('condition_list -> condition_list AND condition','condition_list',3,'p_condition_list','parser.py',106),
  ('condition -> IDENTIFIER comparison_operator value','condition',3,'p_condition','parser.py',115),
  ('comparison_operator -> EQUAL','comparison_operator',1,'p_comparison_operator','parser.py',121),
  ('comparison_operator -> NOTEQUAL','comparison_operator',1,'p_comparison_operator','parser.py',122),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','parser.py',123),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','parser.py',124),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','parser.py',125),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','parser.py',126),
  ('value -> STRING','value',1,'p_value','parser.py',132),
  ('value -> NUMBER','value',1,'p_value','parser.py',133),
]
